<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">   

	<!-- 방법1 : 일반적인 setter injection -->
	<bean id="myProcess" class="pack.MyProcess">
		<property name="nai" value="25"></property>
		<property name="name"> <!-- setName 호출 -->
			<value>공기밥</value>
		</property>
		<!--  
		<property name="memberData" ref="member" />
		-->
		<property name="memberData">
			<bean class="pack.MemberData"></bean> <!-- MemberData가 MyProcess에서만 사용되면 이렇게도 가능 -->
		</property>
	</bean>
	<!--  
	<bean id="member" class="pack.MemberData"/>
	-->
</beans>
